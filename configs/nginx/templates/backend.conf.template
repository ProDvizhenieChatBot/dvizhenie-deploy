server {
    listen          80;
    server_name     ${DOMAIN};
    # return          301     https://$host:$server_port$request_uri;
    return          301     https://$host$request_uri;
}

map $http_origin $cors_origin {
    default "";
    "~^https?://(.*\.)?ikemurami\.com$" $http_origin;
    "~^https?://localhost(:[0-9]+)?$" $http_origin;
}

server {
    listen 443 ssl;
    http2 on;
    server_name     ${DOMAIN};

    include /etc/nginx/ssl/params.conf;
    include /etc/nginx/ssl/certificates.conf;

    # Логи
    error_log /var/log/nginx/backend_error.log;
    access_log /var/log/nginx/backend_access.log;

    # Rule 0: docs

    location = /form-manual {
        alias /usr/share/nginx/html/form_manual.html;
        default_type text/html;
        charset utf-8;
    }

    location /docs {
        proxy_pass http://api-service:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /redoc {
        proxy_pass http://api-service:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /openapi.json {
        proxy_pass http://api-service:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # На время презентации закрываем возможность обновлять форму
    location /api/v1/admin/forms/schema {
        deny all;
        return 403;
    }

    # Rule 1: Protect the admin area with Basic Auth
    # This is the ONLY way to access the application management endpoints.
    location /api/v1/admin/ {
        auth_basic "Admin Area";
        auth_basic_user_file /etc/nginx/.htpasswd;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';

        # Proxy the request to the API service
        set $api_service_upstream http://api-service:8000;
        # Rewrite the URL to remove the /admin prefix
        rewrite ^/api/v1/admin/(.*)$ /api/v1/$1 break;
        proxy_pass $api_service_upstream$request_uri;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    } 

    # Rule 3: Route specific file service requests.
    # Nginx matches the most specific location block, so this is fine.
    location /api/v1/files/ {
        set $file_service_upstream http://storage-service:8000;
        proxy_pass $file_service_upstream;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';


        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Rule 4: Route ALL other public requests to the main API service.
    # This will correctly handle /docs, /sessions, and other non-admin, non-file endpoints.
    location / {
        set $api_service_upstream http://api-service:8000;
        proxy_pass $api_service_upstream;

        # Жесткий хардкод корсов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';

        # Покончил с корсами

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
